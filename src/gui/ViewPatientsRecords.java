/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import data.*;
import javax.swing.JOptionPane;

/**
 *
 * @author madala
 */
public class ViewPatientsRecords extends javax.swing.JFrame {

    Practioner objPractioner = null;

    /**
     * Creates new form ViewPatientsRecords
     *
     * @param objPrac
     */
    public ViewPatientsRecords(Practioner objPrac) {
        initComponents();
        objPractioner = objPrac;
        setScreenTitle();

    }

    private ViewPatientsRecords() {
        initComponents();
    }

    private void clearTextArea() {
        taDetails.setText(" ");
    }

    private void heading() {
        taDetails.setText("PatientID\tFirstName\tLastName\tAge\tStreet\t\tTown\t"
                + "Province\tComirbity\tResult\tPractionerID\n");
    }

    private void setScreenTitle() {
        this.setTitle("Welcome " + objPractioner.getPosition() + " "
                + objPractioner.getLastName() + " " + objPractioner.getFirstName() + " "
                + "Username: " + objPractioner.getUsername());

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        btnShowNegative = new javax.swing.JButton();
        btnShowPositive = new javax.swing.JButton();
        btnMain = new javax.swing.JButton();
        btnShowAll = new javax.swing.JButton();
        cmbProvinces = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        btnSearch1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        taDetails = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jPanel2.setBackground(new java.awt.Color(0, 51, 102));

        jPanel1.setBackground(new java.awt.Color(0, 51, 102));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.gray, 2), "Actions", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Gill Sans MT Condensed", 0, 18), new java.awt.Color(0, 0, 0))); // NOI18N

        btnShowNegative.setFont(new java.awt.Font("Gill Sans MT Condensed", 0, 18)); // NOI18N
        btnShowNegative.setText("Show Negative Patients");
        btnShowNegative.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowNegativeActionPerformed(evt);
            }
        });

        btnShowPositive.setFont(new java.awt.Font("Gill Sans MT Condensed", 0, 18)); // NOI18N
        btnShowPositive.setText("Show Positive Patients");
        btnShowPositive.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowPositiveActionPerformed(evt);
            }
        });

        btnMain.setFont(new java.awt.Font("Gill Sans MT Condensed", 0, 18)); // NOI18N
        btnMain.setText("Back To Main Menu");
        btnMain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMainActionPerformed(evt);
            }
        });

        btnShowAll.setFont(new java.awt.Font("Gill Sans MT Condensed", 0, 18)); // NOI18N
        btnShowAll.setText("Show All Patients");
        btnShowAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowAllActionPerformed(evt);
            }
        });

        cmbProvinces.setFont(new java.awt.Font("Gill Sans MT Condensed", 0, 18)); // NOI18N
        cmbProvinces.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Eastern Cape", "Free State", "Gauteng", "KZN", "Limpopo", "Mpumalanga", "North West", "Northern Cape", "Western Cape" }));
        cmbProvinces.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbProvincesActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Gill Sans MT Condensed", 0, 18)); // NOI18N
        jLabel1.setText("Show Patients By Province");

        btnSearch1.setFont(new java.awt.Font("Gill Sans MT Condensed", 0, 18)); // NOI18N
        btnSearch1.setText("Search For Practioner Patients");
        btnSearch1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearch1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(79, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnShowAll, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnShowPositive, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnShowNegative, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbProvinces, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSearch1, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(76, 76, 76))
                    .addComponent(btnMain, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(btnShowAll)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnShowNegative)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnShowPositive)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addComponent(btnSearch1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cmbProvinces, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51)
                .addComponent(btnMain)
                .addGap(15, 15, 15))
        );

        taDetails.setEditable(false);
        taDetails.setBackground(new java.awt.Color(0, 51, 102));
        taDetails.setColumns(20);
        taDetails.setFont(new java.awt.Font("Gill Sans MT Condensed", 0, 18)); // NOI18N
        taDetails.setRows(5);
        taDetails.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.gray, 2), "Patient Details", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Gill Sans MT Condensed", 0, 18), new java.awt.Color(0, 0, 0))); // NOI18N
        jScrollPane1.setViewportView(taDetails);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 974, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jScrollPane1)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnShowAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowAllActionPerformed
        clearTextArea();
        heading();

        try {
            for (int i = 0; i < Patient.getAllPatients().size(); i++) {

                taDetails.append(Patient.getAllPatients().get(i).toString());

            }
        } catch (NotFoundException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }//GEN-LAST:event_btnShowAllActionPerformed

    private void btnMainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMainActionPerformed
        Homepage frmHomepage = new Homepage(objPractioner);
        frmHomepage.setVisible(true);
        dispose();
    }//GEN-LAST:event_btnMainActionPerformed

    private void btnShowNegativeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowNegativeActionPerformed
        clearTextArea();
        heading();

        try {
            if (Patient.getCertainPatients("Negative").size() > 0) {
                for (int i = 0; i < Patient.getCertainPatients("Negative").size(); i++) {
                    taDetails.append(Patient.getCertainPatients("Negative").
                            get(i).toString());

                }
            } else {
                JOptionPane.showMessageDialog(null, "There are no negative"
                        + "patients at the momement");
            }
        } catch (NotFoundException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }

    }//GEN-LAST:event_btnShowNegativeActionPerformed

    private void btnShowPositiveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowPositiveActionPerformed
         clearTextArea();
        heading();

        try {
            if (Patient.getCertainPatients("Positive").size() > 0) {
                for (int i = 0; i < Patient.getCertainPatients("Positive").size(); i++) {
                    taDetails.append(Patient.getCertainPatients("Positive").
                            get(i).toString());

                }
            } else {
                JOptionPane.showMessageDialog(null, "There are no positive"
                        + "patients at the momement");
            }
        } catch (NotFoundException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }//GEN-LAST:event_btnShowPositiveActionPerformed

    private void btnSearch1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearch1ActionPerformed
      String username =  JOptionPane.showInputDialog("Enter the Practioner's "
              + "email");
      int practionerID;
        try {
            Practioner objSearchPrac = Patient.returnPractioner(username);
            if(objSearchPrac == null){
                JOptionPane.showMessageDialog(null, "There is no parctioner with"
                        + " such an email on our system");
            }else{
                clearTextArea();
                heading();
                practionerID = objSearchPrac.getPractionerID();
                for (int i = 0; i < 
                     Patient.searchPatientByPractioner(practionerID).size(); i++) {
                    taDetails.append(Patient.searchPatientByPractioner(practionerID).
                            get(i).toString());
                    
                }
            }
        } catch (NotFoundException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }//GEN-LAST:event_btnSearch1ActionPerformed

    private void cmbProvincesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbProvincesActionPerformed
        String province = String.valueOf(cmbProvinces.getSelectedItem());
        clearTextArea();
        heading();
        try {
            if(Patient.getPatientsByProvince(province).size()<=0){
              JOptionPane.showMessageDialog(null, "Sorry There is no patients "
                      + "from " + province);
            }else{
                for (int i = 0; i < 
                        Patient.getPatientsByProvince(province).size(); i++) {
                    
                    taDetails.append(Patient.getPatientsByProvince(province).
                            get(i).toString());
                    
                }
            }
        } catch (NotFoundException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }//GEN-LAST:event_cmbProvincesActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewPatientsRecords.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new ViewPatientsRecords().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnMain;
    private javax.swing.JButton btnSearch1;
    private javax.swing.JButton btnShowAll;
    private javax.swing.JButton btnShowNegative;
    private javax.swing.JButton btnShowPositive;
    private javax.swing.JComboBox<String> cmbProvinces;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea taDetails;
    // End of variables declaration//GEN-END:variables
}
