/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import data.*;
import javax.swing.JOptionPane;

/**
 *
 * @author madala
 */
public final class StatisticsScreen extends javax.swing.JFrame {

    Practioner objPractioner = null;

    public void setScreenTitle() {
        this.setTitle("Welcome " + objPractioner.getPosition() + " "
                + objPractioner.getLastName() + " " + objPractioner.getFirstName() + " "
                + "Username : " + objPractioner.getUsername());

    }

    /**
     * Creates new form StatisticsScreen
     */
    public StatisticsScreen() {
        initComponents();
    }

    public StatisticsScreen(Practioner objPrac) {
        initComponents();
        objPractioner = objPrac;
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setScreenTitle();

    }

    public void display(int num, String result) {
        taStats.setText("The Number Of " + result + " Patients : "
                + num);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        taStats = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        btnPositivePatients = new javax.swing.JButton();
        btnNegativePatients = new javax.swing.JButton();
        btnCommibidities = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        taStats.setColumns(20);
        taStats.setFont(new java.awt.Font("Gill Sans MT Condensed", 0, 18)); // NOI18N
        taStats.setRows(5);
        taStats.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.gray, 2));
        jScrollPane1.setViewportView(taStats);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.gray, 2), "Actions", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Gill Sans MT Condensed", 0, 18))); // NOI18N
        jPanel1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        btnPositivePatients.setFont(new java.awt.Font("Gill Sans MT Condensed", 0, 18)); // NOI18N
        btnPositivePatients.setText("Positive Patients");
        btnPositivePatients.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPositivePatientsActionPerformed(evt);
            }
        });

        btnNegativePatients.setFont(new java.awt.Font("Gill Sans MT Condensed", 0, 18)); // NOI18N
        btnNegativePatients.setText("Negative Patients");
        btnNegativePatients.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNegativePatientsActionPerformed(evt);
            }
        });

        btnCommibidities.setFont(new java.awt.Font("Gill Sans MT Condensed", 0, 18)); // NOI18N
        btnCommibidities.setText("Patients With Commibidites");
        btnCommibidities.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCommibiditiesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnNegativePatients, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnPositivePatients, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnCommibidities, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(114, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(btnPositivePatients)
                .addGap(27, 27, 27)
                .addComponent(btnNegativePatients)
                .addGap(31, 31, 31)
                .addComponent(btnCommibidities)
                .addContainerGap(69, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 393, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnPositivePatientsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPositivePatientsActionPerformed
        int number = 0;
        try {
            number = Patient.getNoOfPositivePatients();
            display(number, "positive");
        } catch (NotFoundException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }//GEN-LAST:event_btnPositivePatientsActionPerformed

    private void btnNegativePatientsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNegativePatientsActionPerformed
        int number = 0;
        try {
            number = Patient.getNoOfNegativePatients();
            display(number, "negative");
        } catch (NotFoundException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }//GEN-LAST:event_btnNegativePatientsActionPerformed

    private void btnCommibiditiesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCommibiditiesActionPerformed
        int number = 0;
        try {
            number = Patient.getNoOfPatientsWithCommibidities();
            display(number, "commibidities");
        } catch (NotFoundException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }//GEN-LAST:event_btnCommibiditiesActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StatisticsScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new StatisticsScreen().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCommibidities;
    private javax.swing.JButton btnNegativePatients;
    private javax.swing.JButton btnPositivePatients;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea taStats;
    // End of variables declaration//GEN-END:variables
}
